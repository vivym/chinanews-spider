// Code generated by protoc-gen-go. DO NOT EDIT.
// source: wordle.proto

package wordle

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NCOVIS_ShapeWordleRequest_MethodType int32

const (
	NCOVIS_ShapeWordleRequest_Wordle      NCOVIS_ShapeWordleRequest_MethodType = 0
	NCOVIS_ShapeWordleRequest_ShapeWordle NCOVIS_ShapeWordleRequest_MethodType = 1
)

var NCOVIS_ShapeWordleRequest_MethodType_name = map[int32]string{
	0: "Wordle",
	1: "ShapeWordle",
}

var NCOVIS_ShapeWordleRequest_MethodType_value = map[string]int32{
	"Wordle":      0,
	"ShapeWordle": 1,
}

func (x NCOVIS_ShapeWordleRequest_MethodType) String() string {
	return proto.EnumName(NCOVIS_ShapeWordleRequest_MethodType_name, int32(x))
}

func (NCOVIS_ShapeWordleRequest_MethodType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d09d7891857f2e58, []int{0, 0}
}

type NCOVIS_ShapeWordleRequest struct {
	Method               NCOVIS_ShapeWordleRequest_MethodType `protobuf:"varint,1,opt,name=method,proto3,enum=wordle.NCOVIS_ShapeWordleRequest_MethodType" json:"method,omitempty"`
	Topic                string                               `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	Words                []*NCOVIS_ShapeWordleRequest_Word    `protobuf:"bytes,3,rep,name=words,proto3" json:"words,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *NCOVIS_ShapeWordleRequest) Reset()         { *m = NCOVIS_ShapeWordleRequest{} }
func (m *NCOVIS_ShapeWordleRequest) String() string { return proto.CompactTextString(m) }
func (*NCOVIS_ShapeWordleRequest) ProtoMessage()    {}
func (*NCOVIS_ShapeWordleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d09d7891857f2e58, []int{0}
}

func (m *NCOVIS_ShapeWordleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NCOVIS_ShapeWordleRequest.Unmarshal(m, b)
}
func (m *NCOVIS_ShapeWordleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NCOVIS_ShapeWordleRequest.Marshal(b, m, deterministic)
}
func (m *NCOVIS_ShapeWordleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NCOVIS_ShapeWordleRequest.Merge(m, src)
}
func (m *NCOVIS_ShapeWordleRequest) XXX_Size() int {
	return xxx_messageInfo_NCOVIS_ShapeWordleRequest.Size(m)
}
func (m *NCOVIS_ShapeWordleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NCOVIS_ShapeWordleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NCOVIS_ShapeWordleRequest proto.InternalMessageInfo

func (m *NCOVIS_ShapeWordleRequest) GetMethod() NCOVIS_ShapeWordleRequest_MethodType {
	if m != nil {
		return m.Method
	}
	return NCOVIS_ShapeWordleRequest_Wordle
}

func (m *NCOVIS_ShapeWordleRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *NCOVIS_ShapeWordleRequest) GetWords() []*NCOVIS_ShapeWordleRequest_Word {
	if m != nil {
		return m.Words
	}
	return nil
}

type NCOVIS_ShapeWordleRequest_Word struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Weight               float64  `protobuf:"fixed64,2,opt,name=weight,proto3" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NCOVIS_ShapeWordleRequest_Word) Reset()         { *m = NCOVIS_ShapeWordleRequest_Word{} }
func (m *NCOVIS_ShapeWordleRequest_Word) String() string { return proto.CompactTextString(m) }
func (*NCOVIS_ShapeWordleRequest_Word) ProtoMessage()    {}
func (*NCOVIS_ShapeWordleRequest_Word) Descriptor() ([]byte, []int) {
	return fileDescriptor_d09d7891857f2e58, []int{0, 0}
}

func (m *NCOVIS_ShapeWordleRequest_Word) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NCOVIS_ShapeWordleRequest_Word.Unmarshal(m, b)
}
func (m *NCOVIS_ShapeWordleRequest_Word) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NCOVIS_ShapeWordleRequest_Word.Marshal(b, m, deterministic)
}
func (m *NCOVIS_ShapeWordleRequest_Word) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NCOVIS_ShapeWordleRequest_Word.Merge(m, src)
}
func (m *NCOVIS_ShapeWordleRequest_Word) XXX_Size() int {
	return xxx_messageInfo_NCOVIS_ShapeWordleRequest_Word.Size(m)
}
func (m *NCOVIS_ShapeWordleRequest_Word) XXX_DiscardUnknown() {
	xxx_messageInfo_NCOVIS_ShapeWordleRequest_Word.DiscardUnknown(m)
}

var xxx_messageInfo_NCOVIS_ShapeWordleRequest_Word proto.InternalMessageInfo

func (m *NCOVIS_ShapeWordleRequest_Word) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NCOVIS_ShapeWordleRequest_Word) GetWeight() float64 {
	if m != nil {
		return m.Weight
	}
	return 0
}

type NCOVIS_ShapeWordleResponse struct {
	Keywords             []*NCOVIS_ShapeWordleResponse_Word `protobuf:"bytes,1,rep,name=keywords,proto3" json:"keywords,omitempty"`
	FillingWords         []*NCOVIS_ShapeWordleResponse_Word `protobuf:"bytes,2,rep,name=fillingWords,proto3" json:"fillingWords,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *NCOVIS_ShapeWordleResponse) Reset()         { *m = NCOVIS_ShapeWordleResponse{} }
func (m *NCOVIS_ShapeWordleResponse) String() string { return proto.CompactTextString(m) }
func (*NCOVIS_ShapeWordleResponse) ProtoMessage()    {}
func (*NCOVIS_ShapeWordleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d09d7891857f2e58, []int{1}
}

func (m *NCOVIS_ShapeWordleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NCOVIS_ShapeWordleResponse.Unmarshal(m, b)
}
func (m *NCOVIS_ShapeWordleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NCOVIS_ShapeWordleResponse.Marshal(b, m, deterministic)
}
func (m *NCOVIS_ShapeWordleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NCOVIS_ShapeWordleResponse.Merge(m, src)
}
func (m *NCOVIS_ShapeWordleResponse) XXX_Size() int {
	return xxx_messageInfo_NCOVIS_ShapeWordleResponse.Size(m)
}
func (m *NCOVIS_ShapeWordleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NCOVIS_ShapeWordleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NCOVIS_ShapeWordleResponse proto.InternalMessageInfo

func (m *NCOVIS_ShapeWordleResponse) GetKeywords() []*NCOVIS_ShapeWordleResponse_Word {
	if m != nil {
		return m.Keywords
	}
	return nil
}

func (m *NCOVIS_ShapeWordleResponse) GetFillingWords() []*NCOVIS_ShapeWordleResponse_Word {
	if m != nil {
		return m.FillingWords
	}
	return nil
}

type NCOVIS_ShapeWordleResponse_Word struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FontSize             float64  `protobuf:"fixed64,2,opt,name=fontSize,proto3" json:"fontSize,omitempty"`
	Color                string   `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	Rotate               float64  `protobuf:"fixed64,4,opt,name=rotate,proto3" json:"rotate,omitempty"`
	TransX               float64  `protobuf:"fixed64,5,opt,name=transX,proto3" json:"transX,omitempty"`
	TransY               float64  `protobuf:"fixed64,6,opt,name=transY,proto3" json:"transY,omitempty"`
	FillX                float64  `protobuf:"fixed64,7,opt,name=fillX,proto3" json:"fillX,omitempty"`
	FillY                float64  `protobuf:"fixed64,8,opt,name=fillY,proto3" json:"fillY,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NCOVIS_ShapeWordleResponse_Word) Reset()         { *m = NCOVIS_ShapeWordleResponse_Word{} }
func (m *NCOVIS_ShapeWordleResponse_Word) String() string { return proto.CompactTextString(m) }
func (*NCOVIS_ShapeWordleResponse_Word) ProtoMessage()    {}
func (*NCOVIS_ShapeWordleResponse_Word) Descriptor() ([]byte, []int) {
	return fileDescriptor_d09d7891857f2e58, []int{1, 0}
}

func (m *NCOVIS_ShapeWordleResponse_Word) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NCOVIS_ShapeWordleResponse_Word.Unmarshal(m, b)
}
func (m *NCOVIS_ShapeWordleResponse_Word) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NCOVIS_ShapeWordleResponse_Word.Marshal(b, m, deterministic)
}
func (m *NCOVIS_ShapeWordleResponse_Word) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NCOVIS_ShapeWordleResponse_Word.Merge(m, src)
}
func (m *NCOVIS_ShapeWordleResponse_Word) XXX_Size() int {
	return xxx_messageInfo_NCOVIS_ShapeWordleResponse_Word.Size(m)
}
func (m *NCOVIS_ShapeWordleResponse_Word) XXX_DiscardUnknown() {
	xxx_messageInfo_NCOVIS_ShapeWordleResponse_Word.DiscardUnknown(m)
}

var xxx_messageInfo_NCOVIS_ShapeWordleResponse_Word proto.InternalMessageInfo

func (m *NCOVIS_ShapeWordleResponse_Word) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NCOVIS_ShapeWordleResponse_Word) GetFontSize() float64 {
	if m != nil {
		return m.FontSize
	}
	return 0
}

func (m *NCOVIS_ShapeWordleResponse_Word) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *NCOVIS_ShapeWordleResponse_Word) GetRotate() float64 {
	if m != nil {
		return m.Rotate
	}
	return 0
}

func (m *NCOVIS_ShapeWordleResponse_Word) GetTransX() float64 {
	if m != nil {
		return m.TransX
	}
	return 0
}

func (m *NCOVIS_ShapeWordleResponse_Word) GetTransY() float64 {
	if m != nil {
		return m.TransY
	}
	return 0
}

func (m *NCOVIS_ShapeWordleResponse_Word) GetFillX() float64 {
	if m != nil {
		return m.FillX
	}
	return 0
}

func (m *NCOVIS_ShapeWordleResponse_Word) GetFillY() float64 {
	if m != nil {
		return m.FillY
	}
	return 0
}

func init() {
	proto.RegisterEnum("wordle.NCOVIS_ShapeWordleRequest_MethodType", NCOVIS_ShapeWordleRequest_MethodType_name, NCOVIS_ShapeWordleRequest_MethodType_value)
	proto.RegisterType((*NCOVIS_ShapeWordleRequest)(nil), "wordle.NCOVIS_ShapeWordleRequest")
	proto.RegisterType((*NCOVIS_ShapeWordleRequest_Word)(nil), "wordle.NCOVIS_ShapeWordleRequest.Word")
	proto.RegisterType((*NCOVIS_ShapeWordleResponse)(nil), "wordle.NCOVIS_ShapeWordleResponse")
	proto.RegisterType((*NCOVIS_ShapeWordleResponse_Word)(nil), "wordle.NCOVIS_ShapeWordleResponse.Word")
}

func init() {
	proto.RegisterFile("wordle.proto", fileDescriptor_d09d7891857f2e58)
}

var fileDescriptor_d09d7891857f2e58 = []byte{
	// 358 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xcd, 0x4e, 0xc2, 0x40,
	0x14, 0x85, 0x6d, 0x81, 0x0a, 0x17, 0xa2, 0xe4, 0xc6, 0x98, 0xb1, 0x2b, 0xec, 0x42, 0x31, 0x31,
	0x2c, 0xea, 0xd6, 0x1d, 0x6e, 0x8c, 0x51, 0x93, 0x62, 0x84, 0xc6, 0x85, 0xa9, 0x30, 0x40, 0x63,
	0xe9, 0xd4, 0x76, 0x0c, 0xc1, 0xe7, 0xf0, 0x81, 0x7c, 0x25, 0xdf, 0xc0, 0xcc, 0xdc, 0xf2, 0x63,
	0x54, 0x88, 0xbb, 0x7e, 0x27, 0x3d, 0x67, 0x4e, 0xef, 0xed, 0x40, 0x6d, 0x2a, 0xd2, 0x41, 0xc4,
	0x5b, 0x49, 0x2a, 0xa4, 0x40, 0x8b, 0xc8, 0x79, 0x37, 0xe1, 0xe0, 0xa6, 0x7d, 0x7b, 0x7f, 0xd9,
	0x79, 0xec, 0x8c, 0x83, 0x84, 0x77, 0xb5, 0xec, 0xf1, 0x97, 0x57, 0x9e, 0x49, 0xbc, 0x00, 0x6b,
	0xc2, 0xe5, 0x58, 0x0c, 0x98, 0xd1, 0x30, 0x9a, 0x3b, 0xee, 0x69, 0x2b, 0x0f, 0xf9, 0xd3, 0xd2,
	0xba, 0xd6, 0xef, 0xdf, 0xcd, 0x12, 0xee, 0xe5, 0x5e, 0xdc, 0x83, 0x92, 0x14, 0x49, 0xd8, 0x67,
	0x66, 0xc3, 0x68, 0x56, 0x3c, 0x02, 0x3c, 0x87, 0x92, 0x0a, 0xcb, 0x58, 0xa1, 0x51, 0x68, 0x56,
	0xdd, 0xa3, 0xcd, 0xd1, 0x8a, 0x3c, 0x32, 0xd9, 0x2e, 0x14, 0x15, 0x22, 0x42, 0x31, 0x0e, 0x26,
	0x5c, 0xf7, 0xab, 0x78, 0xfa, 0x19, 0xf7, 0xc1, 0x9a, 0xf2, 0x70, 0x34, 0x96, 0xfa, 0x40, 0xc3,
	0xcb, 0xc9, 0x39, 0x01, 0x58, 0xb6, 0x43, 0x00, 0x8b, 0xe2, 0xeb, 0x5b, 0xb8, 0x0b, 0xd5, 0x95,
	0xf3, 0xea, 0x86, 0xf3, 0x69, 0x82, 0xfd, 0x5b, 0x91, 0x2c, 0x11, 0x71, 0xc6, 0xb1, 0x0d, 0xe5,
	0x67, 0x3e, 0xa3, 0xfa, 0x86, 0xae, 0x7f, 0xbc, 0xae, 0x3e, 0xb9, 0xa8, 0xff, 0xc2, 0x88, 0x57,
	0x50, 0x1b, 0x86, 0x51, 0x14, 0xc6, 0xa3, 0xae, 0x0e, 0x32, 0xff, 0x17, 0xf4, 0xcd, 0x6c, 0x7f,
	0x18, 0x6b, 0x06, 0x62, 0x43, 0x79, 0x28, 0x62, 0xd9, 0x09, 0xdf, 0x78, 0x3e, 0x92, 0x05, 0xab,
	0xe5, 0xf4, 0x45, 0x24, 0x52, 0x56, 0xa0, 0xe5, 0x68, 0x50, 0x23, 0x4c, 0x85, 0x0c, 0x24, 0x67,
	0x45, 0x1a, 0x21, 0x91, 0xd2, 0x65, 0x1a, 0xc4, 0x59, 0x8f, 0x95, 0x48, 0x27, 0x5a, 0xe8, 0x3e,
	0xb3, 0x56, 0x74, 0x5f, 0xa5, 0xab, 0x9a, 0x3d, 0xb6, 0xad, 0x65, 0x82, 0xb9, 0xea, 0xb3, 0xf2,
	0x52, 0xf5, 0x5d, 0x3e, 0x5f, 0x08, 0x3e, 0x00, 0xfe, 0xfc, 0x7a, 0x3c, 0xdc, 0xf8, 0x87, 0xd8,
	0xce, 0xe6, 0xe1, 0x3d, 0x59, 0xfa, 0x02, 0x9c, 0x7d, 0x05, 0x00, 0x00, 0xff, 0xff, 0x47, 0x20,
	0x53, 0xf1, 0x10, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// WordleClient is the client API for Wordle service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WordleClient interface {
	NCOVIS_ShapeWordle(ctx context.Context, in *NCOVIS_ShapeWordleRequest, opts ...grpc.CallOption) (*NCOVIS_ShapeWordleResponse, error)
}

type wordleClient struct {
	cc grpc.ClientConnInterface
}

func NewWordleClient(cc grpc.ClientConnInterface) WordleClient {
	return &wordleClient{cc}
}

func (c *wordleClient) NCOVIS_ShapeWordle(ctx context.Context, in *NCOVIS_ShapeWordleRequest, opts ...grpc.CallOption) (*NCOVIS_ShapeWordleResponse, error) {
	out := new(NCOVIS_ShapeWordleResponse)
	err := c.cc.Invoke(ctx, "/wordle.Wordle/NCOVIS_ShapeWordle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WordleServer is the server API for Wordle service.
type WordleServer interface {
	NCOVIS_ShapeWordle(context.Context, *NCOVIS_ShapeWordleRequest) (*NCOVIS_ShapeWordleResponse, error)
}

// UnimplementedWordleServer can be embedded to have forward compatible implementations.
type UnimplementedWordleServer struct {
}

func (*UnimplementedWordleServer) NCOVIS_ShapeWordle(ctx context.Context, req *NCOVIS_ShapeWordleRequest) (*NCOVIS_ShapeWordleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NCOVIS_ShapeWordle not implemented")
}

func RegisterWordleServer(s *grpc.Server, srv WordleServer) {
	s.RegisterService(&_Wordle_serviceDesc, srv)
}

func _Wordle_NCOVIS_ShapeWordle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NCOVIS_ShapeWordleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WordleServer).NCOVIS_ShapeWordle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wordle.Wordle/NCOVIS_ShapeWordle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WordleServer).NCOVIS_ShapeWordle(ctx, req.(*NCOVIS_ShapeWordleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Wordle_serviceDesc = grpc.ServiceDesc{
	ServiceName: "wordle.Wordle",
	HandlerType: (*WordleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NCOVIS_ShapeWordle",
			Handler:    _Wordle_NCOVIS_ShapeWordle_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "wordle.proto",
}
